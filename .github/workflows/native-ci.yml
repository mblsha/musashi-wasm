name: Native CI

on:
  push:
    branches: [ main, master, wasm ]
  pull_request:
    branches: [ main, master, wasm ]
  workflow_dispatch:

jobs:
  native-build:
    name: Native Build & Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler: [clang]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache ninja-build protobuf-compiler libprotobuf-dev
          if [[ "${{ matrix.compiler }}" == "clang" ]]; then
            sudo apt-get install -y clang
            echo "CC=clang"   >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          else
            echo "CC=gcc"  >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          fi

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-v1
          restore-keys: |
            ccache-${{ runner.os }}-${{ matrix.compiler }}-
            ccache-${{ runner.os }}-

      - name: Configure ccache
        run: |
          ccache --zero-stats
          ccache --set-config=compiler_check=content
          ccache --set-config=compression=true
          ccache --max-size=500M
          ccache --show-config

      - name: Configure with CMake (Ninja + ccache)
        run: |
          cmake -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DBUILD_TESTS=ON \
            -DENABLE_PERFETTO=ON

      - name: Build
        run: cmake --build build --parallel $(nproc)

      - name: Run tests
        timeout-minutes: 1
        working-directory: build
        run: ctest --output-on-failure -C ${{ matrix.build_type }}

      - name: Show ccache stats
        if: always()
        run: ccache --show-stats

  sanitizer-tests:
    name: Sanitizer Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [address, undefined, thread]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install clang for sanitizers
        run: |
          sudo apt-get update
          sudo apt-get install -y clang ninja-build protobuf-compiler libprotobuf-dev
          echo "CC=clang"   >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Configure (per-sanitizer)
        run: |
          cmake -B build-${{ matrix.sanitizer }} \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DBUILD_TESTS=ON \
            -DENABLE_PERFETTO=OFF \
            -DSANITIZER=${{ matrix.sanitizer }}

      - name: Build
        run: cmake --build build-${{ matrix.sanitizer }} --parallel $(nproc)

      - name: Run tests
        timeout-minutes: 1
        working-directory: build-${{ matrix.sanitizer }}
        env:
          ASAN_OPTIONS: detect_leaks=1:check_initialization_order=1
          UBSAN_OPTIONS: print_stacktrace=1:halt_on_error=1
          TSAN_OPTIONS: halt_on_error=1:second_deadlock_stack=1
        run: ctest --output-on-failure -C Debug --timeout 300
