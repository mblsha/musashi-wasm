name: Publish to npm

on:
  release:
    types: [created] # Triggers when a new GitHub release is created
  workflow_dispatch: # Allows manual triggering for testing

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Allow reading content to get release tag
      id-token: write # Needed for provenance if you enable it
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a current LTS version
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: 'npm-package/package-lock.json'

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: '3.1.46' # Pinning version for reproducible builds

      - name: Install fish shell
        run: |
          sudo apt-add-repository -y ppa:fish-shell/release-3
          sudo apt-get update
          sudo apt-get install -y fish

      - name: Create package directory
        run: mkdir -p npm-package/dist

      # --- Build Standard WASM ---
      - name: Build standard WASM
        run: ./build_wasm_simple.sh

      - name: Stage standard WASM artifacts
        run: |
          mv musashi-node.out.wasm npm-package/dist/musashi.wasm
          mv musashi-node.out.js npm-package/dist/musashi-loader.js
          echo "✓ Staged standard WASM artifacts"

      # --- Build Perfetto WASM ---
      - name: Build Perfetto WASM
        run: ./build_perfetto_wasm_simple.sh # Assuming this script builds the Perfetto version

      - name: Stage Perfetto WASM artifacts
        run: |
          mv musashi-node.out.wasm npm-package/dist/musashi-perfetto.wasm
          mv musashi-node.out.js npm-package/dist/musashi-perfetto-loader.js
          echo "✓ Staged Perfetto WASM artifacts"

      - name: List final package contents
        run: ls -lR npm-package

      # --- Prepare and Publish Package ---
      - name: Set package version from release tag
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "Setting package version to ${VERSION}"
          npm --prefix npm-package version ${VERSION} --no-git-tag-version

      - name: Publish to npm
        run: npm publish --access public --prefix npm-package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
